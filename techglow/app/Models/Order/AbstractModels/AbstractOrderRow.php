<?php
/**
 * Model object generated by: Skipper (http://www.skipper18.com)
 * Do not modify this file manually.
 */

namespace App\Models\Order\AbstractModels;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;

/**
* Class AbstractOrderRow
* @package App\Models\Order\AbstractModels
*
* @property bigInteger $id
* @property bigInteger $order_id
* @property bigInteger $supplier_id
* @property string $supplier_art_no
* @property string $supplier_name
* @property string $art_no
* @property string $name
* @property integer $quantity
* @property enum $unit
* @property bigInteger $unit_price
* @property bigInteger $discount
* @property bigInteger $amount
* @property bigInteger $vat
* @property integer $vat_percent
* @property boolean $vat_reverse
* @property bigInteger $partner_id
* @property string $discount_code
* @property bigInteger $discount_code_id
* @property bigInteger $parcels_id
* @property \Carbon\Carbon $created_at
* @property \Carbon\Carbon $updated_at
* @property \Carbon\Carbon $deleted_at
* @property \App\Models\Order\Order|null $order
* @property \App\Models\Product\Supplier|null $supplier
* @property \App\Models\Partner\Partner|null $partner
* @property \App\Models\Order\Parcels|null $parcels
* @property \App\Models\Partner\DiscountCode|null $discountCode
* @property \Illuminate\Database\Eloquent\Collection $transactions
*/ 
abstract class AbstractOrderRow extends Model
{
    use SoftDeletes;
    
    /**  
     * The model's default values for attributes.
     * 
     * @var array
     */
    protected $attributes = [
        'quantity' => 1,
        'unit' => "pcs",
        'vat_percent' => 25,
        'vat_reverse' => false
    ];
    
    /**  
     * The attributes that should be cast to native types.
     * 
     * @var array
     */
    protected $casts = [
        'id' => 'integer',
        'order_id' => 'integer',
        'supplier_id' => 'integer',
        'supplier_art_no' => 'string',
        'supplier_name' => 'string',
        'art_no' => 'string',
        'name' => 'string',
        'quantity' => 'integer',
        'unit' => 'string',
        'unit_price' => 'integer',
        'discount' => 'integer',
        'amount' => 'integer',
        'vat' => 'integer',
        'vat_percent' => 'integer',
        'vat_reverse' => 'boolean',
        'partner_id' => 'integer',
        'discount_code' => 'string',
        'discount_code_id' => 'integer',
        'parcels_id' => 'integer',
        'created_at' => 'datetime',
        'updated_at' => 'datetime',
        'deleted_at' => 'datetime'
    ];
    
    /**  
     * The attributes that are mass assignable.
     * 
     * @var array
     */
    protected $fillable = [
        'order_id',
        'supplier_id',
        'supplier_art_no',
        'supplier_name',
        'art_no',
        'name',
        'quantity',
        'unit',
        'unit_price',
        'discount',
        'amount',
        'vat',
        'vat_percent',
        'partner_id',
        'discount_code'
    ];
    
    public function order()
    {
        return $this->belongsTo('\App\Models\Order\Order', 'order_id', 'id');
    }
    
    public function supplier()
    {
        return $this->belongsTo('\App\Models\Product\Supplier', 'supplier_id', 'id');
    }
    
    public function partner()
    {
        return $this->belongsTo('\App\Models\Partner\Partner', 'partner_id', 'id');
    }
    
    public function parcels()
    {
        return $this->belongsTo('\App\Models\Order\Parcels', 'parcels_id', 'id');
    }
    
    public function discountCode()
    {
        return $this->belongsTo('\App\Models\Partner\DiscountCode', 'discount_code_id', 'id');
    }
    
    public function transactions()
    {
        return $this->hasMany('\App\Models\Partner\Transactions', 'order_row_id', 'id');
    }
}
