<?php
/**
 * Model object generated by: Skipper (http://www.skipper18.com)
 * Do not modify this file manually.
 */

namespace App\Models\Product\AbstractModels;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;

/**
* Class AbstractCategory
* @package App\Models\Product\AbstractModels
*
* @property bigInteger $id
* @property string $slug
* @property string $name
* @property longText $description
* @property \Carbon\Carbon $published
* @property bigInteger $count
* @property \Carbon\Carbon $created_at
* @property \Carbon\Carbon $updated_at
* @property \Carbon\Carbon $deleted_at
* @property \Illuminate\Database\Eloquent\Collection $products
*/ 
abstract class AbstractCategory extends Model
{
    use SoftDeletes;
    
    /**  
     * The table associated with the model.
     * 
     * @var string
     */
    protected $table = 'categories';
    
    /**  
     * Customize column name for created_at timestamp
     * 
     * @var string
     */
    protected $CREATED_AT = 'created_at';
    
    /**  
     * Customize column name for updated_at timestamp
     * 
     * @var string
     */
    protected $UPDATED_AT = 'updated_at';
    
    /**  
     * The model's default values for attributes.
     * 
     * @var array
     */
    protected $attributes = ['count' => 0];
    
    /**  
     * The attributes that should be cast to native types.
     * 
     * @var array
     */
    protected $casts = [
        'id' => 'integer',
        'slug' => 'string',
        'name' => 'string',
        'description' => 'string',
        'published' => 'datetime',
        'count' => 'integer',
        'created_at' => 'datetime',
        'updated_at' => 'datetime',
        'deleted_at' => 'datetime'
    ];
    
    /**  
     * The attributes that are mass assignable.
     * 
     * @var array
     */
    protected $fillable = [
        'slug',
        'name',
        'description',
        'published'
    ];
    
    public function products()
    {
        return $this->hasMany('\App\Models\Product\Product', 'category_id', 'id');
    }
    
    public function menus()
    {
        return $this->belongsToMany('\App\Models\Product\Menu', 'category_to_menu', 'category_id', 'menu_id')->using('\App\Models\Product\Category_To_Menu')->withTimestamps();
    }
}
