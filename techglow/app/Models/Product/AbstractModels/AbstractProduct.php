<?php
/**
 * Model object generated by: Skipper (http://www.skipper18.com)
 * Do not modify this file manually.
 */

namespace App\Models\Product\AbstractModels;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;

/**
* Class AbstractProduct
* @package App\Models\Product\AbstractModels
*
* @property bigInteger $id
* @property bigInteger $brand_id
* @property bigInteger $category_id
* @property bigInteger $menu_id
* @property bigInteger $bb_id
* @property bigInteger $cache_price_price
* @property bigInteger $cache_price_campaign_price
* @property bigInteger $cache_price_discounted_price
* @property boolean $cache_price_realisation
* @property boolean $cache_price_campaign
* @property bigInteger $selling_price
* @property string $bb_sku
* @property string $despec_id
* @property string $despec_sku
* @property string $slug
* @property string $isbn
* @property string $ean
* @property string $our_art_no
* @property string $manufacture_art_no
* @property text $name
* @property text $description
* @property text $image
* @property \Carbon\Carbon $discounted_from
* @property \Carbon\Carbon $discounted_to
* @property tinyInteger $discounted_percentage
* @property string $vat_class_se
* @property boolean $vat_reverse
* @property enum $kem_tax
* @property integer $kem_tax_percentage
* @property bigInteger $kem_tax_amount
* @property boolean $discountable
* @property integer $margin_target
* @property integer $stock
* @property enum $unit
* @property json $meta
* @property integer $unit_quantity
* @property boolean $published
* @property integer $target_page
* @property boolean $show_on_start_page
* @property boolean $campaign_product
* @property \Carbon\Carbon $stock_out
* @property \Carbon\Carbon $stock_discontinued
* @property \Carbon\Carbon $stock_incoming
* @property decimal $width
* @property decimal $height
* @property decimal $depth
* @property decimal $weight
* @property \Carbon\Carbon $created_at
* @property \Carbon\Carbon $updated_at
* @property \Carbon\Carbon $deleted_at
* @property \App\Models\Product\Brand|null $brand
* @property \App\Models\Product\Category|null $category
* @property \App\Models\Product\Menu|null $menu
* @property \Illuminate\Database\Eloquent\Collection $sellingPrice
* @property \Illuminate\Database\Eloquent\Collection $attribute
* @property \Illuminate\Database\Eloquent\Collection $purchasePrice
* @property \Illuminate\Database\Eloquent\Collection $supplierProducts
* @property \Illuminate\Database\Eloquent\Collection $cartRow
*/ 
abstract class AbstractProduct extends Model
{
    use SoftDeletes;
    
    /**  
     * The table associated with the model.
     * 
     * @var string
     */
    protected $table = 'products';
    
    /**  
     * Customize column name for created_at timestamp
     * 
     * @var string
     */
    protected $CREATED_AT = 'created_at';
    
    /**  
     * Customize column name for updated_at timestamp
     * 
     * @var string
     */
    protected $UPDATED_AT = 'updated_at';
    
    /**  
     * The model's default values for attributes.
     * 
     * @var array
     */
    protected $attributes = [
        'discounted_percentage' => 0,
        'vat_reverse' => false,
        'kem_tax' => "others",
        'kem_tax_percentage' => 100,
        'kem_tax_amount' => 0,
        'discountable' => 0,
        'margin_target' => 20,
        'stock' => 0,
        'unit' => "pcs",
        'unit_quantity' => 1,
        'published' => false,
        'target_page' => 0,
        'show_on_start_page' => 0,
        'campaign_product' => 0
    ];
    
    /**  
     * The attributes that should be cast to native types.
     * 
     * @var array
     */
    protected $casts = [
        'id' => 'integer',
        'brand_id' => 'integer',
        'category_id' => 'integer',
        'menu_id' => 'integer',
        'bb_id' => 'integer',
        'cache_price_price' => 'integer',
        'cache_price_campaign_price' => 'integer',
        'cache_price_discounted_price' => 'integer',
        'cache_price_realisation' => 'boolean',
        'cache_price_campaign' => 'boolean',
        'selling_price' => 'integer',
        'bb_sku' => 'string',
        'despec_id' => 'string',
        'despec_sku' => 'string',
        'slug' => 'string',
        'isbn' => 'string',
        'ean' => 'string',
        'our_art_no' => 'string',
        'manufacture_art_no' => 'string',
        'name' => 'string',
        'description' => 'string',
        'image' => 'array',
        'discounted_from' => 'datetime',
        'discounted_to' => 'datetime',
        'discounted_percentage' => 'integer',
        'vat_class_se' => 'string',
        'vat_reverse' => 'boolean',
        'kem_tax' => 'string',
        'kem_tax_percentage' => 'integer',
        'kem_tax_amount' => 'integer',
        'discountable' => 'boolean',
        'margin_target' => 'integer',
        'stock' => 'integer',
        'unit' => 'string',
        'meta' => 'array',
        'unit_quantity' => 'integer',
        'published' => 'boolean',
        'target_page' => 'integer',
        'show_on_start_page' => 'boolean',
        'campaign_product' => 'boolean',
        'stock_out' => 'datetime',
        'stock_discontinued' => 'datetime',
        'stock_incoming' => 'datetime:Y-m-d',
        'width' => 'decimal:3',
        'height' => 'decimal:3',
        'depth' => 'decimal:3',
        'weight' => 'decimal:3',
        'created_at' => 'datetime',
        'updated_at' => 'datetime',
        'deleted_at' => 'datetime'
    ];
    
    /**  
     * The attributes that are mass assignable.
     * 
     * @var array
     */
    protected $fillable = [
        'bb_id',
        'cache_price_price',
        'cache_price_campaign_price',
        'cache_price_discounted_price',
        'cache_price_realisation',
        'cache_price_campaign',
        'selling_price',
        'bb_sku',
        'despec_id',
        'despec_sku',
        'slug',
        'isbn',
        'ean',
        'our_art_no',
        'manufacture_art_no',
        'name',
        'description',
        'image',
        'discounted_from',
        'discounted_to',
        'discounted_percentage',
        'vat_class_se',
        'vat_reverse',
        'kem_tax',
        'kem_tax_percentage',
        'kem_tax_amount',
        'discountable',
        'margin_target',
        'stock',
        'meta',
        'published',
        'target_page',
        'width',
        'height',
        'depth',
        'weight'
    ];
    
    public function brand()
    {
        return $this->belongsTo('\App\Models\Product\Brand', 'brand_id', 'id');
    }
    
    public function category()
    {
        return $this->belongsTo('\App\Models\Product\Category', 'category_id', 'id');
    }
    
    public function menu()
    {
        return $this->belongsTo('\App\Models\Product\Menu', 'menu_id', 'id');
    }
    
    public function sellingPrice()
    {
        return $this->hasMany('\App\Models\Product\SellingPrice', 'product_id', 'id');
    }
    
    public function attribute()
    {
        return $this->hasMany('\App\Models\Product\Attribute', 'product_id', 'id');
    }
    
    public function purchasePrice()
    {
        return $this->hasMany('\App\Models\Product\PurchasePrice', 'product_id', 'id');
    }
    
    public function supplierProducts()
    {
        return $this->hasMany('\App\Models\Product\SupplierProducts', 'product_id', 'id');
    }
    
    public function cartRow()
    {
        return $this->hasMany('\App\Models\Cart\CartRow', 'product_id', 'id');
    }
    
    public function accessorys()
    {
        return $this->belongsToMany('\App\Models\Product\Product', 'accessories', 'related_id', 'accessory_id');
    }
    
    public function related()
    {
        return $this->belongsToMany('\App\Models\Product\Product', 'accessories', 'accessory_id', 'related_id');
    }
}
