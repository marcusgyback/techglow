<?php
/**
 * Model object generated by: Skipper (http://www.skipper18.com)
 * Do not modify this file manually.
 */

namespace App\Models\Product\AbstractModels;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;

/**
* Class AbstractMenu
* @package App\Models\Product\AbstractModels
*
* @property bigInteger $id
* @property bigInteger $parent_id
* @property string $title
* @property text $description
* @property longText $slug
* @property json $filters
* @property \Carbon\Carbon $published
* @property integer $weight
* @property \Carbon\Carbon $created_at
* @property \Carbon\Carbon $updated_at
* @property \Carbon\Carbon $deleted_at
* @property \App\Models\Product\Menu|null $parent
* @property \Illuminate\Database\Eloquent\Collection $products
* @property \Illuminate\Database\Eloquent\Collection $children
*/ 
abstract class AbstractMenu extends Model
{
    use SoftDeletes;
    
    /**  
     * The table associated with the model.
     * 
     * @var string
     */
    protected $table = 'menu';
    
    /**  
     * The attributes that should be cast to native types.
     * 
     * @var array
     */
    protected $casts = [
        'id' => 'integer',
        'parent_id' => 'integer',
        'title' => 'string',
        'description' => 'string',
        'slug' => 'string',
        'filters' => 'array',
        'published' => 'datetime',
        'weight' => 'integer',
        'created_at' => 'datetime',
        'updated_at' => 'datetime',
        'deleted_at' => 'datetime'
    ];
    
    /**  
     * The attributes that are mass assignable.
     * 
     * @var array
     */
    protected $fillable = [
        'parent_id',
        'title',
        'description',
        'slug',
        'filters',
        'published',
        'weight'
    ];
    
    public function parent()
    {
        return $this->belongsTo('\App\Models\Product\Menu', 'parent_id', 'id');
    }
    
    public function products()
    {
        return $this->hasMany('\App\Models\Product\Product', 'menu_id', 'id');
    }
    
    public function children()
    {
        return $this->hasMany('\App\Models\Product\Menu', 'parent_id', 'id');
    }
    
    public function categories()
    {
        return $this->belongsToMany('\App\Models\Product\Category', 'category_to_menu', 'menu_id', 'category_id')->using('\App\Models\Product\Category_To_Menu')->withTimestamps();
    }
}
