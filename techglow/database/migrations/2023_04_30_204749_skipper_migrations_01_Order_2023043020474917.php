<?php
/* 
 * Migrations generated by: Skipper (http://www.skipper18.com)
 * Migration id: e5d0f335-9e01-4592-b7aa-3a5cae12117b-01
 * Migration local datetime: 2023-04-30 20:47:49.177812
 * Migration UTC datetime: 2023-04-30 18:47:49.177812
 */ 

use Illuminate\Support\Facades\Schema;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\Migrations\Migration;

class SkipperMigrations01Order2023043020474917 extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        Schema::create('orders', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->enum('order_status', ["offer","invoice","cash"])->nullable(true)->default("offer");
            $table->enum('payment_status', ["cancelled","payed","awaiting","failed"])->nullable(true)->default("awaiting");
            $table->string('fortnox_no')->nullable(true);
            $table->string('pin')->nullable(true);
            $table->boolean('credited')->nullable(true)->default(false);
            $table->string('credited_by')->nullable(true);
            $table->timestamp('credited_at')->nullable(true);
            $table->bigInteger('customer_id')->nullable(true)->unsigned();
            $table->bigInteger('user_id')->nullable(true)->unsigned();
            $table->bigInteger('payment_provider_id')->nullable(true)->unsigned();
            $table->string('payment_provider_ref')->nullable(true);
            $table->string('sellorder_number')->nullable(true);
            $table->enum('send_invoice', ["email","mail","einvoice"])->nullable(true)->default("email");
            $table->boolean('cancelled')->nullable(true)->default(false);
            $table->timestamp('cancelled_at')->nullable(true);
            $table->string('your_reference')->nullable(true);
            $table->string('our_reference')->nullable(true)->default('"WEBSHOP"');
            $table->bigInteger('subtotal')->nullable(true);
            $table->bigInteger('discount')->nullable(true);
            $table->bigInteger('vat')->nullable(true);
            $table->boolean('vat_is_moms')->nullable(true)->default(true);
            $table->bigInteger('equalization')->nullable(true);
            $table->bigInteger('shipping')->nullable(true);
            $table->bigInteger('total')->nullable(true);
            $table->integer('paid')->nullable(true);
            $table->timestamp('paid_at')->nullable(true);
            $table->string('currency', 3)->nullable(true)->default('SEK');
            $table->string('payment_terms')->nullable(true)->default('"factoring"');
            $table->enum('mode_of_delivery', ["post","collect"])->nullable(true)->default("post");
            $table->string('comment')->nullable(true);
            $table->timestamp('accounting_at')->nullable(true);
            $table->timestamp('created_at')->nullable(true);
            $table->timestamp('updated_at')->nullable(true);
            $table->timestamp('deleted_at')->nullable(true);
            $table->index(['payment_status'], 'OrderIndexPaymentStatus');
            $table->index(['order_status'], 'OrderIndexOrderStatus');
            $table->index(['fortnox_no'], 'OrderIndexFortnoxNo');
        });
        Schema::create('purchase_orders', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('accounting_number')->nullable(true);
            $table->string('supplier_number')->nullable(true);
            $table->bigInteger('order_id')->nullable(true)->unsigned();
            $table->bigInteger('supplier_id')->nullable(true)->unsigned();
            $table->timestamp('cancelled_at')->nullable(true);
            $table->timestamp('accounting_at')->nullable(true);
            $table->timestamp('created_at')->nullable(true);
            $table->timestamp('updated_at')->nullable(true);
            $table->timestamp('deleted_at')->nullable(true);
        });
        Schema::create('order_billing_addresses', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->bigInteger('order_id')->unsigned();
            $table->boolean('shipping')->nullable(true)->default(true);
            $table->string('firstname')->nullable(true);
            $table->string('lastname')->nullable(true);
            $table->string('address')->nullable(true);
            $table->string('postal_code')->nullable(true);
            $table->string('city')->nullable(true);
            $table->string('state')->nullable(true);
            $table->string('country', 2)->nullable(true);
            $table->string('email')->nullable(true);
            $table->string('phone')->nullable(true);
            $table->timestamp('created_at')->nullable(true);
            $table->timestamp('updated_at')->nullable(true);
            $table->timestamp('deleted_at')->nullable(true);
        });
        Schema::create('order_shipping_addresses', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->bigInteger('order_id')->unsigned();
            $table->string('firstname')->nullable(true);
            $table->string('lastname')->nullable(true);
            $table->string('address')->nullable(true);
            $table->string('postal_code')->nullable(true);
            $table->string('city')->nullable(true);
            $table->string('state')->nullable(true);
            $table->string('country', 2)->nullable(true);
            $table->string('email')->nullable(true);
            $table->string('phone')->nullable(true);
            $table->string('notification')->nullable(true);
            $table->timestamp('created_at')->nullable(true);
            $table->timestamp('updated_at')->nullable(true);
            $table->timestamp('deleted_at')->nullable(true);
        });
        Schema::create('payment_providers', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->boolean('active')->nullable(true)->default(false);
            $table->string('name')->nullable(true);
            $table->boolean('web')->nullable(true)->default(false);
            $table->boolean('staff')->nullable(true)->default(true);
            $table->timestamp('created_at')->nullable(true);
            $table->timestamp('updated_at')->nullable(true);
            $table->timestamp('deleted_at')->nullable(true);
        });
        Schema::create('order_rows', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->bigInteger('order_id')->nullable(true)->unsigned();
            $table->bigInteger('supplier_id')->nullable(true)->unsigned();
            $table->string('supplier_art_no')->nullable(true);
            $table->string('supplier_name')->nullable(true);
            $table->string('art_no')->nullable(true);
            $table->string('name')->nullable(true);
            $table->integer('quantity')->nullable(true)->default(1);
            $table->enum('unit', ["pack","h","km","pcs","exp"])->nullable(true)->default("pcs");
            $table->bigInteger('unit_price')->nullable(true);
            $table->bigInteger('discount')->nullable(true);
            $table->bigInteger('amount')->nullable(true);
            $table->bigInteger('vat')->nullable(true);
            $table->integer('vat_percent')->nullable(true)->default(25);
            $table->boolean('vat_reverse')->nullable(true)->default(false);
            $table->bigInteger('partner_id')->nullable(true)->unsigned();
            $table->string('discount_code')->nullable(true);
            $table->bigInteger('discount_code_id')->nullable(true)->unsigned();
            $table->bigInteger('parcels_id')->nullable(true)->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->timestamp('updated_at')->nullable(true);
            $table->timestamp('deleted_at')->nullable(true);
            $table->index(['art_no'], 'OrderRowIndexArtNo');
            $table->index(['partner_id'], 'OrderRowIndexPartnerId');
            $table->index(['discount_code'], 'OrderRowIndexDiscountCode');
        });
        Schema::create('parcels', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->enum('status', ["ordered","transit","delivered","unknown","lost"])->nullable(true)->default("ordered");
            $table->text('identifier')->nullable(true);
            $table->string('carrier')->nullable(true);
            $table->timestamp('sent_at')->nullable(true);
            $table->timestamp('delivered_at')->nullable(true);
            $table->timestamp('created_at')->nullable(true);
            $table->timestamp('updated_at')->nullable(true);
            $table->timestamp('deleted_at')->nullable(true);
        });
        Schema::table('orders', function (Blueprint $table) {
            $table->foreign('payment_provider_id')->references('id')->on('payment_providers')->onDelete('restrict')->onUpdate('cascade');
        });
        Schema::table('purchase_orders', function (Blueprint $table) {
            $table->foreign('order_id')->references('id')->on('orders')->onDelete('restrict')->onUpdate('cascade');
        });
        Schema::table('order_billing_addresses', function (Blueprint $table) {
            $table->foreign('order_id')->references('id')->on('orders')->onDelete('restrict')->onUpdate('cascade');
        });
        Schema::table('order_shipping_addresses', function (Blueprint $table) {
            $table->foreign('order_id')->references('id')->on('orders')->onDelete('restrict')->onUpdate('cascade');
        });
        Schema::table('order_rows', function (Blueprint $table) {
            $table->foreign('order_id')->references('id')->on('orders')->onDelete('restrict')->onUpdate('cascade');
        });
        Schema::table('order_rows', function (Blueprint $table) {
            $table->foreign('parcels_id')->references('id')->on('parcels')->onDelete('restrict')->onUpdate('cascade');
        });
    }
    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        if (Schema::hasTable('order_rows')) {
            Schema::table('order_rows', function (Blueprint $table) {
                $table->dropForeign(['parcels_id']);
            });
        }
        if (Schema::hasTable('order_rows')) {
            Schema::table('order_rows', function (Blueprint $table) {
                $table->dropForeign(['order_id']);
            });
        }
        if (Schema::hasTable('order_shipping_addresses')) {
            Schema::table('order_shipping_addresses', function (Blueprint $table) {
                $table->dropForeign(['order_id']);
            });
        }
        if (Schema::hasTable('order_billing_addresses')) {
            Schema::table('order_billing_addresses', function (Blueprint $table) {
                $table->dropForeign(['order_id']);
            });
        }
        if (Schema::hasTable('purchase_orders')) {
            Schema::table('purchase_orders', function (Blueprint $table) {
                $table->dropForeign(['order_id']);
            });
        }
        if (Schema::hasTable('orders')) {
            Schema::table('orders', function (Blueprint $table) {
                $table->dropForeign(['payment_provider_id']);
            });
        }
        Schema::dropIfExists('parcels');
        Schema::dropIfExists('order_rows');
        Schema::dropIfExists('payment_providers');
        Schema::dropIfExists('order_shipping_addresses');
        Schema::dropIfExists('order_billing_addresses');
        Schema::dropIfExists('purchase_orders');
        Schema::dropIfExists('orders');
    }
}
