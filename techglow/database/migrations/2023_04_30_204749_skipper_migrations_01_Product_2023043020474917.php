<?php
/* 
 * Migrations generated by: Skipper (http://www.skipper18.com)
 * Migration id: e5d0f335-9e01-4592-b7aa-3a5cae12117b
 * Migration local datetime: 2023-04-30 20:47:49.177812
 * Migration UTC datetime: 2023-04-30 18:47:49.177812
 */ 

use Illuminate\Support\Facades\Schema;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\Migrations\Migration;

class SkipperMigrations01Product2023043020474917 extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        Schema::create('attribute_types', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('class_type', 255);
            $table->json('name')->nullable(true);
            $table->timestamp('created_at')->nullable(true);
            $table->timestamp('updated_at')->nullable(true);
            $table->timestamp('deleted_at')->nullable(true);
        });
        Schema::create('selling_price', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->bigInteger('product_id')->nullable(true)->unsigned();
            $table->bigInteger('supplier_id')->unsigned();
            $table->bigInteger('price');
            $table->string('currency', 3)->default('SEK');
            $table->timestamp('valid_to')->nullable(true);
            $table->timestamp('valid_from');
            $table->boolean('campaign')->default(False);
            $table->boolean('realisation')->default(False);
            $table->timestamp('created_at')->nullable(true);
            $table->timestamp('updated_at')->nullable(true);
            $table->timestamp('deleted_at')->nullable(true);
            $table->index(['product_id','valid_from','valid_to'], 'SellingPriceIndexMultiOne');
        });
        Schema::create('brands', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->boolean('published')->default(0);
            $table->json('image')->nullable(true);
            $table->longText('name')->nullable(true);
            $table->bigInteger('count')->nullable(true)->default(0);
            $table->timestamp('created_at')->nullable(true);
            $table->timestamp('updated_at')->nullable(true);
            $table->timestamp('deleted_at')->nullable(true);
        });
        Schema::create('attributes', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('class_type', 255)->nullable(true);
            $table->json('name');
            $table->timestamp('created_at')->nullable(true);
            $table->timestamp('updated_at')->nullable(true);
            $table->timestamp('deleted_at')->nullable(true);
            $table->bigInteger('attribute_type_id')->nullable(true)->unsigned();
            $table->bigInteger('attribute_group_id')->nullable(true)->unsigned();
            $table->bigInteger('product_id')->nullable(true)->unsigned();
        });
        Schema::create('products', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->bigInteger('brand_id')->nullable(true)->unsigned();
            $table->bigInteger('category_id')->nullable(true)->unsigned();
            $table->bigInteger('menu_id')->nullable(true)->unsigned();
            $table->bigInteger('bb_id')->nullable(true);
            $table->string('bb_sku')->nullable(true);
            $table->string('despec_id')->nullable(true);
            $table->string('despec_sku')->nullable(true);
            $table->string('slug', 255)->nullable(true);
            $table->string('isbn', 255)->nullable(true);
            $table->string('ean', 255)->nullable(true);
            $table->string('our_art_no', 255);
            $table->string('manufacture_art_no', 255)->nullable(true);
            $table->text('name')->nullable(true);
            $table->text('description')->nullable(true);
            $table->text('image')->nullable(true);
            $table->string('vat_class_se', 255)->nullable(true);
            $table->boolean('vat_reverse')->nullable(true)->default(false);
            $table->enum('kem_tax', ["appliances","others","none"])->nullable(true)->default("others");
            $table->bigInteger('kem_tax_amount')->default(0);
            $table->boolean('discountable')->default(0);
            $table->integer('margin_target')->default(20);
            $table->integer('stock')->default(0);
            $table->enum('unit', ["pack","h","km","pcs","exp"])->nullable(true)->default("pcs");
            $table->integer('unit_quantity')->nullable(true)->default(1);
            $table->boolean('published')->nullable(true)->default(false);
            $table->boolean('show_on_start_page')->nullable(true)->default(0);
            $table->boolean('campaign_product')->nullable(true)->default(0);
            $table->timestamp('stock_out')->nullable(true);
            $table->timestamp('stock_discontinued')->nullable(true);
            $table->date('stock_incoming')->nullable(true);
            $table->decimal('width', 10, 3)->nullable(true);
            $table->decimal('height', 10, 3)->nullable(true);
            $table->decimal('depth', 10, 3)->nullable(true);
            $table->decimal('weight', 10, 3)->nullable(true);
            $table->timestamp('created_at')->nullable(true);
            $table->timestamp('updated_at')->nullable(true);
            $table->timestamp('deleted_at')->nullable(true);
            $table->unique(['our_art_no'], 'ProductUniqueOurArtNoIndex');
            $table->index(['slug'], 'ProductIndexSlug');
            $table->index(['published'], 'ProductIndexPublished');
            $table->index(['show_on_start_page'], 'ProductIndexShowOnStartPage');
            $table->index(['campaign_product'], 'ProductIndexCampaign');
            $table->index(['bb_sku'], 'ProductIndexBBSku');
            $table->index(['despec_sku'], 'ProductIndexDespecSku');
        });
        Schema::create('categories', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('slug')->nullable(true);
            $table->string('name', 255);
            $table->longText('description')->nullable(true);
            $table->timestamp('published')->nullable(true);
            $table->bigInteger('count')->nullable(true)->default(0);
            $table->timestamp('created_at')->nullable(true);
            $table->timestamp('updated_at')->nullable(true);
            $table->timestamp('deleted_at')->nullable(true);
            $table->index(['slug'], 'CategoryIndexSlug');
        });
        Schema::create('attribute_groups', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('class_type', 255);
            $table->json('name')->nullable(true);
            $table->timestamp('created_at')->nullable(true);
            $table->timestamp('updated_at')->nullable(true);
            $table->timestamp('deleted_at')->nullable(true);
        });
        Schema::create('accessories', function (Blueprint $table) {
            $table->bigInteger('related_id')->unsigned();
            $table->bigInteger('accessory_id')->unsigned();
            $table->primary(['related_id','accessory_id']);
        });
        Schema::create('suppliers', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->boolean('active')->nullable(true)->default(true);
            $table->string('name')->nullable(true);
            $table->string('slug')->nullable(true);
            $table->integer('supplier_number')->nullable(true);
            $table->string('api')->nullable(true);
            $table->string('flow_class')->nullable(true)->default('"manual"');
            $table->timestamp('created_at')->nullable(true);
            $table->timestamp('updated_at')->nullable(true);
            $table->timestamp('deleted_at')->nullable(true);
        });
        Schema::create('purchase_price', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->bigInteger('product_id')->unsigned();
            $table->bigInteger('supplier_id')->unsigned();
            $table->string('article_number')->nullable(true);
            $table->boolean('stock_out')->nullable(true);
            $table->date('stock_incoming')->nullable(true);
            $table->boolean('stock_discontinued')->nullable(true)->default(False);
            $table->decimal('price', 10, 2);
            $table->decimal('price_retail', 10, 2)->nullable(true);
            $table->decimal('price_in_shops', 10, 2)->nullable(true);
            $table->string('currency', 3)->default('SEK');
            $table->timestamp('valid_to')->nullable(true);
            $table->timestamp('valid_from');
            $table->boolean('campaign')->default(False);
            $table->boolean('realisation')->default(False);
            $table->string('intrastat')->nullable(true);
            $table->timestamp('created_at')->nullable(true);
            $table->timestamp('updated_at')->nullable(true);
            $table->timestamp('deleted_at')->nullable(true);
            $table->index(['supplier_id','article_number'], 'PurchasePriceIndexSupplierSku');
            $table->index(['article_number'], 'PurchasePriceIndexSku');
            $table->index(['campaign'], 'PurchasePriceIndexCampaign');
            $table->index(['realisation'], 'PurchasePriceIndexRealisation');
        });
        Schema::create('exchange_rates', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('currency_from')->nullable(true);
            $table->string('currency_to')->nullable(true);
            $table->date('currency_date')->nullable(true);
            $table->decimal('rate', 20, 10)->nullable(true);
            $table->timestamp('created_at')->nullable(true);
            $table->timestamp('updated_at')->nullable(true);
            $table->timestamp('deleted_at')->nullable(true);
            $table->index(['currency_from','currency_to'], 'ExchangeRateIndex');
        });
        Schema::create('menu', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->bigInteger('parent_id')->nullable(true)->unsigned();
            $table->string('title')->nullable(true);
            $table->text('description')->nullable(true);
            $table->longText('slug')->nullable(true);
            $table->timestamp('published')->nullable(true);
            $table->integer('weight')->nullable(true);
            $table->timestamp('created_at')->nullable(true);
            $table->timestamp('updated_at')->nullable(true);
            $table->timestamp('deleted_at')->nullable(true);
            $table->index(['slug'], 'MenuIndexSlug');
        });
        Schema::create('category_to_menu', function (Blueprint $table) {
            $table->bigInteger('menu_id')->unsigned();
            $table->bigInteger('category_id')->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->timestamp('updated_at')->nullable(true);
            $table->primary(['menu_id','category_id']);
        });
        Schema::create('supplier_products', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->bigInteger('id_api')->nullable(true);
            $table->bigInteger('supplier_id')->nullable(true)->unsigned();
            $table->bigInteger('product_id')->nullable(true)->unsigned();
            $table->dateTime('dateUpdStock')->nullable(true);
            $table->dateTime('dateUpdImages')->nullable(true);
            $table->dateTime('dateUpdDescription')->nullable(true);
            $table->dateTime('dateUpd')->nullable(true);
            $table->text('payload')->nullable(true);
            $table->double('wholesalePrice', 10, 2)->nullable(true);
            $table->timestamp('created_at')->nullable(true);
            $table->timestamp('updated_at')->nullable(true);
            $table->timestamp('deleted_at')->nullable(true);
        });
        Schema::table('selling_price', function (Blueprint $table) {
            $table->foreign('product_id')->references('id')->on('products')->onDelete('cascade')->onUpdate('cascade');
        });
        Schema::table('selling_price', function (Blueprint $table) {
            $table->foreign('supplier_id')->references('id')->on('suppliers')->onDelete('cascade')->onUpdate('cascade');
        });
        Schema::table('attributes', function (Blueprint $table) {
            $table->foreign('attribute_type_id')->references('id')->on('attribute_types')->onDelete('restrict')->onUpdate('cascade');
        });
        Schema::table('attributes', function (Blueprint $table) {
            $table->foreign('attribute_group_id')->references('id')->on('attribute_groups')->onDelete('restrict')->onUpdate('cascade');
        });
        Schema::table('attributes', function (Blueprint $table) {
            $table->foreign('product_id')->references('id')->on('products')->onDelete('cascade')->onUpdate('cascade');
        });
        Schema::table('products', function (Blueprint $table) {
            $table->foreign('brand_id')->references('id')->on('brands')->onDelete('cascade')->onUpdate('cascade');
        });
        Schema::table('products', function (Blueprint $table) {
            $table->foreign('category_id')->references('id')->on('categories')->onDelete('cascade')->onUpdate('cascade');
        });
        Schema::table('products', function (Blueprint $table) {
            $table->foreign('menu_id')->references('id')->on('menu')->onDelete('set null')->onUpdate('cascade');
        });
        Schema::table('purchase_price', function (Blueprint $table) {
            $table->foreign('product_id')->references('id')->on('products')->onDelete('cascade')->onUpdate('cascade');
        });
        Schema::table('purchase_price', function (Blueprint $table) {
            $table->foreign('supplier_id')->references('id')->on('suppliers')->onDelete('cascade')->onUpdate('cascade');
        });
        Schema::table('menu', function (Blueprint $table) {
            $table->foreign('parent_id')->references('id')->on('menu')->onDelete('restrict')->onUpdate('cascade');
        });
        Schema::table('supplier_products', function (Blueprint $table) {
            $table->foreign('supplier_id')->references('id')->on('suppliers')->onDelete('cascade')->onUpdate('cascade');
        });
        Schema::table('supplier_products', function (Blueprint $table) {
            $table->foreign('product_id')->references('id')->on('products');
        });
        Schema::table('accessories', function (Blueprint $table) {
            $table->foreign('related_id')->references('id')->on('products')->onDelete('cascade')->onUpdate('cascade');
            $table->foreign('accessory_id')->references('id')->on('products')->onDelete('cascade')->onUpdate('cascade');
        });
        Schema::table('category_to_menu', function (Blueprint $table) {
            $table->foreign('menu_id')->references('id')->on('menu');
            $table->foreign('category_id')->references('id')->on('categories');
        });
    }
    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::table('category_to_menu', function (Blueprint $table) {
            $table->dropForeign(['menu_id']);
            $table->dropForeign(['category_id']);
        });
        Schema::table('accessories', function (Blueprint $table) {
            $table->dropForeign(['related_id']);
            $table->dropForeign(['accessory_id']);
        });
        if (Schema::hasTable('supplier_products')) {
            Schema::table('supplier_products', function (Blueprint $table) {
                $table->dropForeign(['product_id']);
            });
        }
        if (Schema::hasTable('supplier_products')) {
            Schema::table('supplier_products', function (Blueprint $table) {
                $table->dropForeign(['supplier_id']);
            });
        }
        if (Schema::hasTable('menu')) {
            Schema::table('menu', function (Blueprint $table) {
                $table->dropForeign(['parent_id']);
            });
        }
        if (Schema::hasTable('purchase_price')) {
            Schema::table('purchase_price', function (Blueprint $table) {
                $table->dropForeign(['supplier_id']);
            });
        }
        if (Schema::hasTable('purchase_price')) {
            Schema::table('purchase_price', function (Blueprint $table) {
                $table->dropForeign(['product_id']);
            });
        }
        if (Schema::hasTable('products')) {
            Schema::table('products', function (Blueprint $table) {
                $table->dropForeign(['menu_id']);
            });
        }
        if (Schema::hasTable('products')) {
            Schema::table('products', function (Blueprint $table) {
                $table->dropForeign(['category_id']);
            });
        }
        if (Schema::hasTable('products')) {
            Schema::table('products', function (Blueprint $table) {
                $table->dropForeign(['brand_id']);
            });
        }
        if (Schema::hasTable('attributes')) {
            Schema::table('attributes', function (Blueprint $table) {
                $table->dropForeign(['product_id']);
            });
        }
        if (Schema::hasTable('attributes')) {
            Schema::table('attributes', function (Blueprint $table) {
                $table->dropForeign(['attribute_group_id']);
            });
        }
        if (Schema::hasTable('attributes')) {
            Schema::table('attributes', function (Blueprint $table) {
                $table->dropForeign(['attribute_type_id']);
            });
        }
        if (Schema::hasTable('selling_price')) {
            Schema::table('selling_price', function (Blueprint $table) {
                $table->dropForeign(['supplier_id']);
            });
        }
        if (Schema::hasTable('selling_price')) {
            Schema::table('selling_price', function (Blueprint $table) {
                $table->dropForeign(['product_id']);
            });
        }
        Schema::dropIfExists('supplier_products');
        Schema::dropIfExists('category_to_menu');
        Schema::dropIfExists('menu');
        Schema::dropIfExists('exchange_rates');
        Schema::dropIfExists('purchase_price');
        Schema::dropIfExists('suppliers');
        Schema::dropIfExists('accessories');
        Schema::dropIfExists('attribute_groups');
        Schema::dropIfExists('categories');
        Schema::dropIfExists('products');
        Schema::dropIfExists('attributes');
        Schema::dropIfExists('brands');
        Schema::dropIfExists('selling_price');
        Schema::dropIfExists('attribute_types');
    }
}
